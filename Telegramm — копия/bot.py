import telebot
import config
from telebot import types
import time

bot = telebot.TeleBot(config.TOKEN)  # –°–æ–∑–¥–∞—é –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –≤—Å—ë —Ç–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –º–æ–¥—É–ª—å, –∑–∞–±–∏—Ä–∞—è —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥–∞


@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?ü§î")
    markup.add(item1)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –ø–æ–º–æ—à–Ω–∏–∫ –º–∏—Å—Ç–µ—Ä–∞ –ì–ª–∞–ª—Å–µ.",
    	parse_mode='html', reply_markup=markup)
    bot.send_message(message.chat.id, "–ß—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ?",
    	parse_mode='html')

@bot.message_handler(content_types=['text'])
def about(message):
        if message.text == "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?ü§î":
            global IP
            IP = message.chat.id
            
            print(IP)
            bot.send_message(message.chat.id, "–ò—Ç–∞–∫, –º–µ–Ω—è –∑–æ–≤—É—Ç mr.Sodal))", parse_mode='html')
            time.sleep(2)
            bot.send_message(message.chat.id, "–Ø —Å–∞–º —Å–µ–±–µ –∏–º—è –ø—Ä–∏–¥—É–º–∞–ª))", parse_mode='html')
            time.sleep(1)
            bot.send_message(message.chat.id, "–Ø –±—ã–ª —Å–æ–∑–¥–∞–Ω –∫–∞–∫–∏–º-—Ç–æ –¥–µ–±–∏–ª–æ–º –ø–æ –∫–ª–∏—á–∫–µ Dasokrys –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å Mr.Glalse", parse_mode='html')
            time.sleep(5)
            bot.send_message(message.chat.id, "–ü–æ–∫–∞ —á—Ç–æ —è –º–æ–≥—É:", parse_mode='html')  
            time.sleep(1)
            bot.send_message(message.chat.id, "–ù–∞–ø–æ–º–Ω–∏—Ç—å —Ç–µ–±–µ, –æ –Ω–æ–≤—ã—Ö —Ä–æ–ª–∏–∫–∞—Ö –Ω–∞ –∫–∞–Ω–∞–ª–µ", parse_mode='html')
            bot.send_message(message.chat.id, "–ü–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –µ–≥–æ –∫–∞–Ω–∞–ª", parse_mode='html')
            bot.send_message(message.chat.id, "–ù–æ –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è, —Ç–∞–∫ —á—Ç–æ —Å–∫–æ—Ä–æ —è —Å–º–æ–≥—É –¥–µ–ª–∞—Ç—å –µ—â—ë –±–æ–ª—å—à–µ!ü§©", parse_mode='html')
            time.sleep(7)

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–ü–æ–Ω—è—Ç–Ω–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
            markup.add(item1, item2)

            bot.send_message(message.chat.id, "–ù—É —á—Ç–æ?", parse_mode='html', reply_markup=markup)



@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == 'good':
            bot.send_message(call.message.chat.id, '–ú–æ–ª–æ–¥–µ—Ü üòé')
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item = types.KeyboardButton("–û–ö")
            markup.add(item)
            bot.send_message(call.message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏ –û–ö', reply_markup=markup)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ù—É —á—Ç–æ?",
                reply_markup=None)
        elif call.data == 'bad':
            bot.send_message(call.message.chat.id, '–ù—É –ø—Ä–æ—á–∏—Ç–∞ –µ—â—ë —Ä–∞–∑ üò£')
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item = types.KeyboardButton("–û–ö")
            markup.add(item)
            bot.send_message(call.message.chat.id, '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏ –û–ö', reply_markup=markup)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ù—É —á—Ç–æ?",
                reply_markup=None)



bot.polling(none_stop = True)
